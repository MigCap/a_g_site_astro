---
import { Image } from "astro:assets";
import { works } from "@/constants/images";
import ChevronRight from "@/components/icons/ChevronRight.astro";
import ChevronLeft from "@/components/icons/ChevronLeft.astro";
import Square from "@/components/icons/Square.astro";
import type { IWork, WORKS_IDS } from "@/constants/images";
import type { ImageMetadata } from "astro";
import Layout from "@/layouts/Layout.astro";

interface Props {
  work: IWork;
  workId: number;
}

export async function getStaticPaths() {
  const categoryPaths = Object.keys(works).flatMap((collectionKey) => {
    const workKey = collectionKey as WORKS_IDS;
    const idPaths = works[workKey].images.map((_, index: number) => {
      return {
        params: { slug: `${collectionKey}/${index}` },
        props: {
          work: (works as any)[collectionKey],
          workId: index,
        },
      };
    });
    return idPaths;
  });

  return [...categoryPaths];
}

const { work, workId } = Astro.props;
const { title } = work;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "../../assets/images/**/**/*.{jpg,png,webp}",
  {
    eager: true,
  }
);

const resolvedImages = work.images.map((img) => {
  const regularSrc = images[`../../${img.source.regular}`]?.default;
  const thumbnailSrc = images[`../../${img.source.thumbnail}`]?.default;

  if (!regularSrc || !thumbnailSrc) {
    console.error(
      `Image not found for ${img.source.regular}. Does not exist in glob: "src/assets/images/**/**/*.{jpg,png,webp}"`
    );
  }

  return {
    ...img,
    source: {
      regular: regularSrc,
      thumbnail: thumbnailSrc,
    },
  };
});

const currentImage = resolvedImages[workId];
const prevImageIndex = workId === 0 ? resolvedImages.length - 1 : workId - 1;
const nextImageIndex = workId === resolvedImages.length - 1 ? 0 : workId + 1;
---

<Layout isWorkPage={true}>
  <div class="work_container">
    <div class="wor_img_wrapper">
      <Image
        src={currentImage.source.regular}
        alt={currentImage.alt}
        class="work_img"
      />
    </div>
    <div class="work_navigation">
      <a href={`/works/${work.id}/${prevImageIndex}`}>
        <ChevronLeft />
      </a>
      <a href={`/works/${work.id}/${nextImageIndex}`}>
        <ChevronRight />
      </a>
    </div>
    <h1>{title} - {currentImage.caption}</h1>
    <a href={`/works`} style={{ padding: "1rem 0" }}>
      <Square />
    </a>
  </div>
</Layout>

<style>
  .work_container {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem 5rem;
  }
  .work_navigation {
    display: flex;
    justify-content: center;
    gap: 5rem;
    padding: 1rem 0;
  }
  .wor_img_wrapper {
    height: 65vh;
    width: 100%;
    display: flex;
    justify-content: center;
    overflow: hidden;
  }
  .work_img {
    width: 100%;
    height: auto;
    object-fit: contain;
  }
</style>
